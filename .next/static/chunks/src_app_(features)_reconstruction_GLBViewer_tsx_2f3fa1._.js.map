{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/Archive/src/app/%28features%29/reconstruction/GLBViewer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Loader2, Wand2 } from \"lucide-react\";\n\nconst generationSteps = [\n  \"Analyzing historical data...\",\n  \"Processing architectural details...\",\n  \"Calculating measurements...\",\n  \"Generating base model...\",\n  \"Applying textures...\",\n  \"Optimizing resolution...\",\n  \"Finalizing reconstruction...\",\n];\n\ninterface GLBViewerProps {\n  modelPath: string;\n}\n\nexport default function GLBViewer({ modelPath }: GLBViewerProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isGenerating, setIsGenerating] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [currentGenerationStep, setCurrentGenerationStep] = useState(0);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n\n  // Extract title from GLB path (e.g., \"/models/Figure 335.glb\" -> \"Figure 335\")\n  const modelTitle = modelPath.split(\"/\").pop()?.replace(\".glb\", \"\") || \"\";\n\n  useEffect(() => {\n    // Simulate generation steps\n    let step = 0;\n    const generationInterval = setInterval(() => {\n      if (step < generationSteps.length) {\n        setGenerationProgress((step + 1) * (100 / generationSteps.length));\n        setCurrentGenerationStep(step);\n        step++;\n      } else {\n        clearInterval(generationInterval);\n        setIsGenerating(false);\n        initScene();\n      }\n    }, 1000);\n\n    return () => clearInterval(generationInterval);\n  }, []);\n\n  const initScene = () => {\n    if (!containerRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(\"#1a1a1a\");\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      containerRef.current.clientWidth / containerRef.current.clientHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(\n      containerRef.current.clientWidth,\n      containerRef.current.clientHeight\n    );\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(5, 5, 5);\n    scene.add(pointLight);\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.autoRotate = true;\n    controls.autoRotateSpeed = 0.5;\n\n    // Load GLB model\n    const loader = new GLTFLoader();\n    loader.load(\n      modelPath,\n      (gltf) => {\n        scene.add(gltf.scene);\n\n        // Center and scale model\n        const box = new THREE.Box3().setFromObject(gltf.scene);\n        const center = box.getCenter(new THREE.Vector3());\n        const size = box.getSize(new THREE.Vector3());\n\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const scale = 2 / maxDim;\n        gltf.scene.scale.setScalar(scale);\n\n        gltf.scene.position.sub(center.multiplyScalar(scale));\n        setIsLoading(false);\n      },\n      (progress) => {\n        if (progress.total > 0) {\n          const progressPercentage = (progress.loaded / progress.total) * 100;\n          setLoadingProgress(Math.min(progressPercentage, 100));\n        } else {\n          setLoadingProgress(0);\n        }\n      },\n      (error) => {\n        console.error(\"Error loading GLB:\", error);\n      }\n    );\n\n    // Animation loop\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Handle resize\n    function handleResize() {\n      if (!containerRef.current) return;\n\n      camera.aspect =\n        containerRef.current.clientWidth / containerRef.current.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(\n        containerRef.current.clientWidth,\n        containerRef.current.clientHeight\n      );\n    }\n    window.addEventListener(\"resize\", handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      if (containerRef.current?.contains(renderer.domElement)) {\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"aspect-square bg-stone-900/50 rounded-lg border border-amber-900/20 overflow-hidden\"\n    >\n      {isGenerating && (\n        <div className=\"h-full flex flex-col items-center justify-center bg-stone-900/90 p-8\">\n          <Wand2 className=\"w-12 h-12 text-amber-500 animate-pulse mb-6\" />\n          <div className=\"text-center space-y-4 max-w-md\">\n            <h3 className=\"text-xl font-serif text-amber-100\">{modelTitle}</h3>\n            <p className=\"text-amber-200/60\">\n              {generationSteps[currentGenerationStep]}\n            </p>\n            <div className=\"w-full h-2 bg-stone-800 rounded-full overflow-hidden\">\n              <div\n                className=\"h-full bg-amber-600 transition-all duration-300\"\n                style={{ width: `${generationProgress}%` }}\n              />\n            </div>\n            <div className=\"text-sm text-amber-200/60\">\n              {generationProgress.toFixed(0)}% Complete\n            </div>\n          </div>\n        </div>\n      )}\n\n      {!isGenerating && isLoading && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-stone-900/90\">\n          <Loader2 className=\"w-8 h-8 text-amber-500 animate-spin mb-4\" />\n          <div className=\"text-center\">\n            <div className=\"text-amber-100 mb-2\">Loading Model...</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}