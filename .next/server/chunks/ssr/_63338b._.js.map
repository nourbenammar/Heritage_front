{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/Archive/src/app/%28features%29/chat/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Define the response type\ninterface GroqResponse {\n  response: string;\n}\n\n// Define the function with proper types\nconst askGroqQuestion = async (pdfPath: string, question: string): Promise<string | null> => {\n  try {\n    const response = await axios.post<GroqResponse>('http://localhost:5000/api/groq/question', {\n      pdf_path: pdfPath,\n      question: question,\n    });\n\n    if (response.data && response.data.response) {\n      return response.data.response;\n    } else {\n      throw new Error('No response from Groq API');\n    }\n  } catch (error) {\n    console.error('Error fetching Groq response:', error);\n    return null;\n  }\n};\n\n// Define the component\nconst ChatComponent: React.FC = () => {\n  const [question, setQuestion] = useState<string>(''); // Question input state\n  const [pdfPath, setPdfPath] = useState<string>('/path/to/your/pdf'); // This could be dynamic or pre-defined\n  const [response, setResponse] = useState<string | null>(null); // To store the response from the Groq API\n  const [isLoading, setIsLoading] = useState<boolean>(false); // Loading state for UX feedback\n\n  // Function to handle asking the question\n  const handleAskQuestion = async () => {\n    if (question) {\n      setIsLoading(true);\n      const groqResponse = await askGroqQuestion(pdfPath, question);\n      setResponse(groqResponse);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-4\">Ask a Question About Sbiba</h1>\n      \n      {/* Input for question */}\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        placeholder=\"Enter your question\"\n        className=\"border rounded p-2 w-full mb-4\"\n      />\n      \n      {/* Ask button */}\n      <button\n        onClick={handleAskQuestion}\n        disabled={isLoading || !question.trim()}\n        className={`p-2 bg-blue-500 text-white rounded ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n      >\n        {isLoading ? 'Asking...' : 'Ask Groq'}\n      </button>\n\n      {/* Display the response from Groq */}\n      {response && (\n        <div className=\"mt-4\">\n          <h2 className=\"font-semibold\">Response from Groq:</h2>\n          <p className=\"text-gray-700\">{response}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;AAQA,wCAAwC;AACxC,MAAM,kBAAkB,OAAO,SAAiB;IAC9C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,IAAI,CAAe,2CAA2C;YACzF,UAAU;YACV,UAAU;QACZ;QAEA,IAAI,SAAS,IAAI,IAAI,SAAS,IAAI,CAAC,QAAQ,EAAE;YAC3C,OAAO,SAAS,IAAI,CAAC,QAAQ;QAC/B,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;AACF;AAEA,uBAAuB;AACvB,MAAM,gBAA0B;IAC9B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,KAAK,uBAAuB;IAC7E,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,sBAAsB,uCAAuC;IAC5G,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,0CAA0C;IACzG,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,QAAQ,gCAAgC;IAE5F,yCAAyC;IACzC,MAAM,oBAAoB;QACxB,IAAI,UAAU;YACZ,aAAa;YACb,MAAM,eAAe,MAAM,gBAAgB,SAAS;YACpD,YAAY;YACZ,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BAGvC,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gBAC3C,aAAY;gBACZ,WAAU;;;;;;0BAIZ,8OAAC;gBACC,SAAS;gBACT,UAAU,aAAa,CAAC,SAAS,IAAI;gBACrC,WAAW,CAAC,mCAAmC,EAAE,YAAY,kCAAkC,IAAI;0BAElG,YAAY,cAAc;;;;;;YAI5B,0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAE,WAAU;kCAAiB;;;;;;;;;;;;;;;;;;AAKxC;uCAEe"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/Archive/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAAA,GAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}