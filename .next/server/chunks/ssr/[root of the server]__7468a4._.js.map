{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/Archive/src/app/%28features%29/chat/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chatbot = () => {\n    const [file, setFile] = useState<File | null>(null);\n    const [sourceId, setSourceId] = useState<string | null>(null);\n    const [question, setQuestion] = useState<string>('');\n    const [chatHistory, setChatHistory] = useState<string[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const selectedFile = event.target.files?.[0];\n        if (selectedFile) {\n            setFile(selectedFile);\n        }\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            alert(\"Please select a file first!\");\n            return;\n        }\n        setIsLoading(true);\n        try {\n            const formData = new FormData();\n            formData.append('file', file);\n            \n            const response = await axios.post('http://localhost:5000/process-pdf', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            setSourceId(response.data.source_id);\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n            setIsLoading(false);\n        }\n    };\n\n    const handleAskQuestion = async () => {\n        if (!sourceId || !question.trim()) {\n            alert(\"Please upload a PDF and ask a question!\");\n            return;\n        }\n        setIsLoading(true);\n        try {\n            const response = await axios.post('http://localhost:5000/ask-question', null, {\n                params: { source_id: sourceId, question },\n            });\n            const answer = response.data.answer;\n            setChatHistory((prev) => [...prev, `You: ${question}`, `Bot: ${answer}`]);\n            setQuestion('');\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error asking question:', error);\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Chat with PDF Bot</h1>\n            \n            <div>\n                <input type=\"file\" onChange={handleFileChange} />\n                <button onClick={handleUpload} disabled={isLoading}>\n                    {isLoading ? 'Uploading...' : 'Upload PDF'}\n                </button>\n            </div>\n\n            {sourceId && (\n                <div>\n                    <h3>Ask your question:</h3>\n                    <input\n                        type=\"text\"\n                        value={question}\n                        onChange={(e) => setQuestion(e.target.value)}\n                    />\n                    <button onClick={handleAskQuestion} disabled={isLoading}>\n                        {isLoading ? 'Processing...' : 'Ask'}\n                    </button>\n                </div>\n            )}\n\n            <div>\n                <h3>Chat History:</h3>\n                <div>\n                    {chatHistory.map((msg, index) => (\n                        <p key={index}>{msg}</p>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbot;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,UAAU;IACZ,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,MAAM,mBAAmB,CAAC;QACtB,MAAM,eAAe,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAC5C,IAAI,cAAc;YACd,QAAQ;QACZ;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,MAAM;YACP,MAAM;YACN;QACJ;QACA,aAAa;QACb,IAAI;YACA,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YAExB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,qCAAqC,UAAU;gBAC7E,SAAS;oBACL,gBAAgB;gBACpB;YACJ;YACA,YAAY,SAAS,IAAI,CAAC,SAAS;YACnC,aAAa;QACjB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,aAAa;QACjB;IACJ;IAEA,MAAM,oBAAoB;QACtB,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,IAAI;YAC/B,MAAM;YACN;QACJ;QACA,aAAa;QACb,IAAI;YACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,sCAAsC,MAAM;gBAC1E,QAAQ;oBAAE,WAAW;oBAAU;gBAAS;YAC5C;YACA,MAAM,SAAS,SAAS,IAAI,CAAC,MAAM;YACnC,eAAe,CAAC,OAAS;uBAAI;oBAAM,CAAC,KAAK,EAAE,UAAU;oBAAE,CAAC,KAAK,EAAE,QAAQ;iBAAC;YACxE,YAAY;YACZ,aAAa;QACjB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,aAAa;QACjB;IACJ;IAEA,qBACI,8OAAC;;0BACG,8OAAC;0BAAG;;;;;;0BAEJ,8OAAC;;kCACG,8OAAC;wBAAM,MAAK;wBAAO,UAAU;;;;;;kCAC7B,8OAAC;wBAAO,SAAS;wBAAc,UAAU;kCACpC,YAAY,iBAAiB;;;;;;;;;;;;YAIrC,0BACG,8OAAC;;kCACG,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;wBACG,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE/C,8OAAC;wBAAO,SAAS;wBAAmB,UAAU;kCACzC,YAAY,kBAAkB;;;;;;;;;;;;0BAK3C,8OAAC;;kCACG,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACI,YAAY,GAAG,CAAC,CAAC,KAAK,sBACnB,8OAAC;0CAAe;+BAAR;;;;;;;;;;;;;;;;;;;;;;AAMhC;uCAEe"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}